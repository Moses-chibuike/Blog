---
export interface Props {
  id: string;
  name: string;
  accept?: string;
  multiple?: boolean;
  required?: boolean;
  label?: string;
  description?: string;
}

const { 
  id, 
  name, 
  accept = "image/*", 
  multiple = false, 
  required = false,
  label = "Upload Image",
  description = "PNG, JPG, GIF up to 10MB"
} = Astro.props;
---

<div class="space-y-4">
  {label && (
    <label for={id} class="block text-sm font-medium text-gray-700">
      {label}
    </label>
  )}
  
  <div class="mt-1 flex justify-center px-6 pt-5 pb-6 border-2 border-gray-300 border-dashed rounded-lg hover:border-primary-400 transition-colors cursor-pointer" onclick={`document.getElementById('${id}').click()`}>
    <div class="space-y-1 text-center">
      <svg class="mx-auto h-12 w-12 text-gray-400" stroke="currentColor" fill="none" viewBox="0 0 48 48">
        <path d="M28 8H12a4 4 0 00-4 4v20m32-12v8m0 0v8a4 4 0 01-4 4H12a4 4 0 01-4-4v-4m32-4l-3.172-3.172a4 4 0 00-5.656 0L28 28M8 32l9.172-9.172a4 4 0 015.656 0L28 28m0 0l4 4m4-24h8m-4-4v8m-12 4h.02" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
      </svg>
      <div class="flex text-sm text-gray-600">
        <span class="relative cursor-pointer bg-white rounded-md font-medium text-primary-600 hover:text-primary-500 focus-within:outline-none focus-within:ring-2 focus-within:ring-offset-2 focus-within:ring-primary-500">
          <span>Upload a file</span>
          <input 
            {id} 
            {name} 
            type="file" 
            {accept} 
            {multiple} 
            {required}
            class="sr-only" 
          />
        </span>
        <p class="pl-1">or drag and drop</p>
      </div>
      {description && (
        <p class="text-xs text-gray-500">{description}</p>
      )}
    </div>
  </div>
  
  <div id={`${id}-preview`} class="hidden grid grid-cols-2 md:grid-cols-3 gap-4 mt-4">
    <!-- Preview images will be inserted here -->
  </div>
</div>

<script define:vars={{ id }}>
  document.addEventListener('DOMContentLoaded', function() {
    const input = document.getElementById(id);
    const preview = document.getElementById(`${id}-preview`);
    
    if (input && preview) {
      input.addEventListener('change', function(e) {
        const files = e.target.files;
        preview.innerHTML = '';
        
        if (files && files.length > 0) {
          preview.classList.remove('hidden');
          
          Array.from(files).forEach((file, index) => {
            if (file.type.startsWith('image/')) {
              const reader = new FileReader();
              reader.onload = function(e) {
                const div = document.createElement('div');
                div.className = 'relative group';
                div.innerHTML = `
                  <img src="${e.target.result}" alt="Preview ${index + 1}" class="w-full h-32 object-cover rounded-lg">
                  <button type="button" class="absolute top-2 right-2 bg-red-500 text-white rounded-full w-6 h-6 flex items-center justify-center text-xs opacity-0 group-hover:opacity-100 transition-opacity" onclick="this.parentElement.remove()">
                    Ã—
                  </button>
                `;
                preview.appendChild(div);
              };
              reader.readAsDataURL(file);
            }
          });
        } else {
          preview.classList.add('hidden');
        }
      });
    }
  });
</script>